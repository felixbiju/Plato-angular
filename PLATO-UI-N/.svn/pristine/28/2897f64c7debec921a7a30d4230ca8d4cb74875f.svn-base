<div id="createTask" class="w3-modal modal-sm action-popup">
  <div class="w3-modal-content w3-animate-zoom">
    <header class="w3-container">
      <a onclick="document.getElementById('createTask').style.display='none'" (click)="resetForm(myform)" class="modal-close">
        <svg viewBox="0 0 24 24">
          <path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"
          />
          <path d="M0 0h24v24h-24z" fill="none" />
        </svg>
      </a>
      <h2>Create Portfolio</h2>
    </header>
    <form #myform="ngForm">
      <div class="w3-container modal-content customScroll text-center">
        <mat-form-field class="example-full-width" style="margin:30px 0">
          <input matInput placeholder="Enter Portfolio Name" [(ngModel)]="portfolio_name" value="" required id="portfolioname" name="portfolioname" #portfolioname="ngModel">
          <div *ngIf="portfolioname.errors && (portfolioname.dirty || portfolioname.touched)" class="alert alert-danger">
            <div [hidden]="!portfolioname.errors.required">
              Portfolio name is required!
            </div>
          </div>
        </mat-form-field>
      </div>
      <footer class="w3-container">
        <button mat-raised-button  class="btn mat-raised-button mat-primary mat-raised-cancel-button" color="primary" onclick="document.getElementById('createTask').style.display='none'" (click)="resetForm(myform)">
          Cancel
        </button>
        <button mat-raised-button  class="btn mat-raised-button mat-primary" color="primary" [disabled]="myform.invalid"  onclick="document.getElementById('createTask').style.display='none'"
        (click)="createPortfolio()">
          Create
        </button>
      </footer>
    </form>
  </div>
</div>

<div id="updateTask" class="w3-modal modal-sm action-popup">
  <div class="w3-modal-content w3-animate-zoom">
    <header class="w3-container">
      <a onclick="document.getElementById('updateTask').style.display='none'"  class="modal-close">
        <svg viewBox="0 0 24 24">
          <path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"
          />
          <path d="M0 0h24v24h-24z" fill="none" />
        </svg>
      </a>
      <h2>Update Portfolio</h2>
    </header>
    <form #updateform="ngForm">
      <div class="w3-container modal-content customScroll text-center">
      <mat-form-field class="example-full-width" style="margin:30px 0">
        <input id="nameTextbox" matInput placeholder="Enter Portfolio Name" id="portfolioname" name="portfolioname" #portfolioname="ngModel" [(ngModel)]="portfolio1_name" value="" minlength="2" required >
        <div *ngIf="portfolioname.errors && (portfolioname.dirty || portfolioname.touched)" class="alert alert-danger">
            <div [hidden]="!portfolioname.errors.required">
              Portfolio name is required!
            </div>
          </div>
      </mat-form-field>
      </div>
      <footer class="w3-container">
        <button mat-raised-button class="btn mat-raised-button mat-primary mat-raised-cancel-button" color="primary" onclick="document.getElementById('updateTask').style.display='none'">
          Cancel
        </button>
        <button mat-raised-button class="btn mat-raised-button mat-primary" color="primary" onclick="document.getElementById('updateTask').style.display='none'"
        (click)="updatePortfolio()">
          Update
        </button>
      </footer>
    </form>
  </div>
</div>

<mat-card class="config-card">
  <mat-card-header>
    <mat-card-title class="config-card-heading"> Portfolios Configuration</mat-card-title>
    <mat-card-actions class="actions">
        <ng-container *ngFor="let component of screenPermission" >
          <button mat-icon-button onclick="document.getElementById('createTask').style.display='block'"
          *ngIf="component.name === 'Create Portfolio'"
          [ngStyle]="{'opacity': component.checked ? '0.5' : '1' }"
          [disabled]="component.checked"
          [disableRipple]="true">
            <img title="Create new Portfolio" src="../../assets/genral_icons/plus.png" style="cursor: pointer; margin: 5px; vertical-align: sub;"
            />
          </button>
        </ng-container>
        <ng-container *ngFor="let component of screenPermission" >
          <button mat-icon-button onclick="document.getElementById('updateTask').style.display='block'"
          *ngIf="component.name === 'Edit Portfolio'"
          [disableRipple]="true" (click)="getPortfolioname()"
          [ngStyle]="{'opacity':!isEditShow || component.checked ? '0.5' : '1' }"
          [disabled]="!isEditShow || component.checked">
            <img title="Edit existing Portfolio" src="../../assets/genral_icons/edit.png" style="cursor: pointer; margin: 5px; vertical-align: sub;"
            />
          </button>
        </ng-container>
        <ng-container *ngFor="let component of screenPermission" >
          <button mat-icon-button (click)="deletePortfolio()"
          *ngIf="component.name === 'Delete Portfolio'"
          [disableRipple]="true"
          [ngStyle]="{'opacity':!isDeleteShow || component.checked ? '0.5' : '1' }"
          [disabled]="!isDeleteShow || component.checked">
            <img title="Delete existing Portfolio" src="../../assets/genral_icons/bin_sm.png" style="cursor: pointer; margin: 5px; vertical-align: sub;"
            />
          </button>
        </ng-container>
    </mat-card-actions>
  </mat-card-header>
  <mat-card-content>
    <div class="table-responsive plato_table">
      <table class="table table-responsive table-hover">
        <tr >
          <th class="checkboxAlign"> <mat-checkbox [(ngModel)]="selectAll" (click)="setAllChecked()"></mat-checkbox> </th>
          <th class=""> Name </th>

        </tr>

        <tr *ngFor="let portfolio of (portfolios | sortBy: 'portfolio_name')" id="rowNo">
          <td class="checkboxAlign"> <mat-checkbox [ngModel]="selectedPortfolio" (click)='isChecked(portfolio)'> </mat-checkbox> </td>
          <td> {{portfolio.portfolio_name}} </td>

        </tr>
      </table>
    </div>
  </mat-card-content>
</mat-card>
